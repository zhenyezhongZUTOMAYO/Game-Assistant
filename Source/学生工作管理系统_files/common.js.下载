function escapeJquery(srcString){
    // 转义之后的结果
    var escapseResult = srcString;
    // javascript正则表达式中的特殊字符
    var jsSpecialChars = ["\\", "^", "$", "*", "?", ".", "+", "(", ")", "[", "]", "|", "{", "}"];
    // jquery中的特殊字符,不是正则表达式中的特殊字符
    var jquerySpecialChars = ["~", "`", "@", "#", "%", "&", "=", "'", "\"",":", ";", "<", ">", ",", "/"];
    for (var i = 0; i < jsSpecialChars.length; i++) {
        escapseResult = escapseResult.replace(new RegExp("\\"+ jsSpecialChars[i], "g"), "\\"+ jsSpecialChars[i]);
    }
    for (var i = 0; i < jquerySpecialChars.length; i++) {
        escapseResult = escapseResult.replace(new RegExp(jquerySpecialChars[i], "g"), "\\" + jquerySpecialChars[i]);
    }
    return escapseResult;
}

/**
 * 页面上的input封装成json
 */
function getWhere(id){
    var param = {};
    if(id!=null){
        $("#"+id+" > input:hidden,#"+id+" > input:text,#"+id+" > select").each(function () {
            var name = $(this).attr("name");//获取name属性
            var value=$(this).val();
            if(null!=name && null != value){
                //param[name]=value;
                setKey(param, name, value);
            }
        });
        $("#"+id+" > input:radio,#"+id+" > input:checkbox").filter(':checked').each(function () {
            var name = $(this).attr("name");//获取name属性
            var value=$(this).val();
            if(null!=name && null != value){
                //param[name]=value;
                setKey(param, name, value);
            }
        });
    }else{
        $("input:hidden,input:text,select,textarea").each(function () {
            var name = $(this).attr("name");//获取name属性
            var value=$(this).val();
            if(null!=name && null != value){
                //param[name]=value;
                setKey(param, name, value);
            }
        });
        $('input:radio,input:checkbox').filter(':checked').each(function () {
            var name = $(this).attr("name");//获取name属性
            var value=$(this).val();
            if(null!=name && null != value){
                //param[name]=value;
                setKey(param, name, value);
            }
        });
    }
    return param;
}
function setKey(obj, key, value){
    if(obj[key]!=undefined){
        obj[key]=obj[key]+","+value;
    }
    else{
        obj[key]=value;
    }
}

function FloatAdd(arg1,arg2){

    var r1,r2,m;

    try{r1=arg1.toString().split(".")[1].length}catch(e){r1=0}

    try{r2=arg2.toString().split(".")[1].length}catch(e){r2=0}

    m=Math.pow(10,Math.max(r1,r2));
    return FloatDiv(FloatMul(arg1,m)+FloatMul(arg2,m) , m);

}

//浮点数减法运算

function FloatSub(arg1,arg2){

    var r1,r2,m,n;

    try{r1=arg1.toString().split(".")[1].length}catch(e){r1=0}

    try{r2=arg2.toString().split(".")[1].length}catch(e){r2=0}

    m=Math.pow(10,Math.max(r1,r2));

//动态控制精度长度

    n=(r1>=r2)?r1:r2;

    return (FloatMul(arg1,m)-FloatMul(arg2,m)/m).toFixed(n);

}

//浮点数乘法运算

function FloatMul(arg1,arg2)

{

    var m=0,s1=arg1.toString(),s2=arg2.toString();

    try{m+=s1.split(".")[1].length}catch(e){}

    try{m+=s2.split(".")[1].length}catch(e){}

    return Number(s1.replace(".",""))*Number(s2.replace(".",""))/Math.pow(10,m);

}

//浮点数除法运算

function FloatDiv(arg1,arg2){
    var t1=0,t2=0,r1,r2;

    try{t1=arg1.toString().split(".")[1].length}catch(e){}

    try{t2=arg2.toString().split(".")[1].length}catch(e){}

    with(Math){

        r1=Number(arg1.toString().replace(".",""));

        r2=Number(arg2.toString().replace(".",""));

        return FloatMul((r1/r2), pow(10,t2-t1));

    }

}

